name: Generate Action

on:
  workflow_dispatch:

env:
  LIQUIBASE_VERSION: 4.25.1

jobs:
  create-command-list:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3

      - name: create list
        run: make create-list VERSION=$LIQUIBASE_VERSION

      - id: set-matrix
        run: echo "matrix=$(cat commands.json)" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v3
        with:
          name: commands-$LIQUIBASE_VERSION
          path: commands.json

  create-action-repo:
    env:
      TF_VAR_BOT_TOKEN: ${{ secrets.GHA_GENERATOR_ADMIN_TOKEN }}
      TF_TOKEN_spacelift_io: ${{ secrets.SPACELIFT_API_KEY }}

    runs-on: ubuntu-latest
    needs: [ create-command-list ]
    steps:
      - uses: actions/checkout@v3

      - name: Install spacectl
        uses: spacelift-io/setup-spacectl@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/download-artifact@v3
        with:
          name: commands-$LIQUIBASE_VERSION
          path: ./

      - name: Terraform Format
        id: fmt
        run: terraform fmt

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Preview infrastructure
        env:
          SPACELIFT_API_KEY_ENDPOINT: ${{ secrets.SPACELIFT_API_KEY_ENDPOINT }}
          SPACELIFT_API_KEY_ID: ${{ secrets.SPACELIFT_API_KEY_ID }}
          SPACELIFT_API_KEY_SECRET: ${{ secrets.SPACELIFT_API_KEY_SECRET }}
        run: spacectl stack local-preview --id liquibase-github-actions --disregard-gitignore=true

      - name: Check for commands.json changes
        id: check_changes
        run: |
          git diff --exit-code || echo "Changes found"

      - name: Commit and push commands.json changes
        if: steps.check_changes.outputs.code == '0'
        run: |
          git config --global init.defaultBranch main
          git config --global user.name "liquibot"
          git config --global user.email "liquibot@liquibase.org"
          git add commands.json
          git commit -m "Update commands.json" -a
          git push

      - name: Deploy infrastructure
        if: github.ref == 'refs/heads/main'
        env:
          SPACELIFT_API_KEY_ENDPOINT: ${{ secrets.SPACELIFT_API_KEY_ENDPOINT }}
          SPACELIFT_API_KEY_ID: ${{ secrets.SPACELIFT_API_KEY_ID }}
          SPACELIFT_API_KEY_SECRET: ${{ secrets.SPACELIFT_API_KEY_SECRET }}
        run: |
          spacectl stack set-current-commit --id liquibase-github-actions --sha ${{ github.sha }}
          spacectl stack deploy --id liquibase-github-actions --auto-confirm 

  generate-action:
    runs-on: ubuntu-latest
    needs: [ create-command-list, create-action-repo ]
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        commands: ${{ fromJSON(needs.create-command-list.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3

      - run: echo ${{ matrix.commands }}

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'
          repo-token: ${{ secrets.BOT_TOKEN }}

      - run: make generate VERSION=$LIQUIBASE_VERSION COMMAND="${{ matrix.commands }}"

      - name: Configure git user
        run: |
          git config --global init.defaultBranch main
          git config --global user.name "liquibot"
          git config --global user.email "liquibot@liquibase.org"

      - name: Push Action to Repo
        run: ./scripts/push-to-repository.sh "${{ matrix.commands }}" $LIQUIBASE_VERSION
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}

  output-action:
    runs-on: ubuntu-latest
    needs: [ generate-action ]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: commands-$LIQUIBASE_VERSION
          path: ./

      - name: Output Action Edit Link
        run: ./scripts/output-release-edit.sh "v$LIQUIBASE_VERSION"

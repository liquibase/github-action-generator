name: Generate Action

on:
  workflow_dispatch:

jobs:
  create-command-list:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3

      - name: create list
        run: make create-list VERSION=4.17.0

      - id: set-matrix
        run: echo "matrix=$(cat commands.json)" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v3
        with:
          name: commands-4.17.0
          path: commands.json

  create-action-repo:
    runs-on: ubuntu-latest
    needs: [ create-command-list ]
    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - uses: actions/download-artifact@v3
        with:
          name: commands-4.17.0
          path: ./

      - name: Terraform Format
        id: fmt
        run: terraform fmt

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
        env:
          TF_VAR_BOT_TOKEN: ${{ secrets.BOT_TOKEN }}

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          TF_VAR_BOT_TOKEN: ${{ secrets.BOT_TOKEN }}

  generate-action:
    runs-on: ubuntu-latest
    needs: [ create-command-list, create-action-repo ]
    strategy:
      matrix:
        commands: ${{ fromJSON(needs.create-command-list.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3

      - run: echo ${{ matrix.commands }}

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - run: make generate VERSION=4.17.0 COMMAND="${{ matrix.commands }}"

      - name: Configure git user
        run: |
          git config --global user.name "liquibot"
          git config --global user.email "liquibot@liquibase.org"

      - name: Push Action to Repo
        run: ./scripts/push-to-repository.sh "${{ matrix.commands }}" 4.17.0
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
